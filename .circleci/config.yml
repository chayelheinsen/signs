version: 2
jobs:
  build:
    parallelism: 4
    working_directory: ~/signs
    docker:
      - image: chayel/signs
        environment:
          RAILS_ENV: test
          PGUSER: circleci
#      - image: circleci/postgres:9.6.8-alpine-ram
#        environment:
#          POSTGRES_USER: circleci
    steps:
      - checkout

#      # Restore bundle cache
#      - restore_cache:
#          key: signs-{{ checksum "Gemfile.lock" }}
#
#      # Bundle install dependencies
#      - run: bundle install --path vendor/bundle
#
#      # Store bundle cache
#      - save_cache:
#          key: signs-{{ checksum "Gemfile.lock" }}
#          paths:
#            - vendor/bundle
#
#      # Database setup
#      - run: bundle exec rake db:create
#      - run: bundle exec rake db:schema:load

#      - run:
#        name: install dockerize
#        command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
#        environment:
#          DOCKERIZE_VERSION: v0.3.0
#      - run:
#        name: Wait for db
#        command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Run rspec in parallel
      - run: |
          docker-compose run backend rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress
      # Save test results for timing analysis
      - store_test_results:
          path: test_results